version: '3.8'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: lv-nginx
    ports:
      - 8000:8000
      - 8001:8001
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
      - ./backend:/app
      - ./frontend:/frontend
      - ./docker/cron/root:/var/spool/cron/crontabs/root
    networks:
      - lv_network
    depends_on:
      - php
  
  postgres:
    image: postgres:14-alpine3.15
    container_name: lv-postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USERNAME}:-lv
      POSTGRES_PASSWORD: ${DB_PASSWORD}:-secret
      POSTGRES_DB: ${DB_DATABASE}:-lv_db
      DB_DATABASE_TESTING: ${DB_DATABASE_TESTING}:-lv_db_test
    volumes:
      - ./docker/postgres/pg-data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
#      - ./docker/postgres/data:/home/postgres/data
    networks:
      - lv_network

  pgadmin:
    container_name: lv-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - lv_network
    restart: unless-stopped

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lv-php
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: ${DB_CONNECTION}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    volumes:
      - ./backend:/app
      - ./docker/cron/root:/var/spool/cron/crontabs/root
    networks:
      - lv_network

  composer:
    image: composer:latest
    container_name: lv-composer
    volumes:
      - ./backend:/app
    depends_on:
      - php
    networks:
      - lv_network
    command: "composer install"

  nodejs:
    image: node:16.15-alpine
    container_name: lv-frontend
    working_dir: /frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
#      - ./docker/node/entrypoint.sh:/docker-entrypoint.sh
    networks:
      - lv_network
    command: >
      sh -c "npm install && npm run build"

networks:
  lv_network:
    driver: bridge
volumes:
  pgadmin: